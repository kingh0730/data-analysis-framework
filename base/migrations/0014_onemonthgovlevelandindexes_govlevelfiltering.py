# Generated by Django 4.0.5 on 2022-06-15 06:30

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('base', '0013_remove_onemonthgovlevelandindexes_onemonthgovsandindexes_ptr_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='OneMonthGovLevelAndIndexes',
            fields=[
                ('dataframefile_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='base.dataframefile')),
                ('gov_level', models.SmallIntegerField(choices=[(-1, 'GovLevel.ALL'), (0, 'GovLevel.NATION'), (1, 'GovLevel.PROVINCE'), (2, 'GovLevel.CITY_LEVEL'), (3, 'GovLevel.DISTRICT_LEVEL')])),
                ('month', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='base.month')),
            ],
            options={
                'verbose_name_plural': '1.b. One month gov level and indexes',
            },
            bases=('base.dataframefile',),
        ),
        migrations.CreateModel(
            name='GovLevelFiltering',
            fields=[
                ('job_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='base.job')),
                ('gov_level', models.SmallIntegerField(choices=[(-1, 'GovLevel.ALL'), (0, 'GovLevel.NATION'), (1, 'GovLevel.PROVINCE'), (2, 'GovLevel.CITY_LEVEL'), (3, 'GovLevel.DISTRICT_LEVEL')])),
                ('input', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='input_gov_level_filtering', to='base.onemonthgovsandindexes')),
                ('output', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='output_gov_level_filtering', to='base.onemonthgovlevelandindexes')),
            ],
            options={
                'verbose_name_plural': '2.c. Gov level filtering',
            },
            bases=('base.job',),
        ),
    ]
